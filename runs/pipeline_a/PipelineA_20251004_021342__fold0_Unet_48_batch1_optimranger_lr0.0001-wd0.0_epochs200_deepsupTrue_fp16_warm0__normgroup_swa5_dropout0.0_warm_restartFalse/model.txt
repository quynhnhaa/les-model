DataParallel(
  (module): Unet(
    (encoder1): UBlock(
      (ConvBnRelu1): ConvBnRelu(
        (conv): Conv3d(4, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(3, 24, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
      (ConvBnRelu2): ConvBnRelu(
        (conv): Conv3d(24, 48, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 48, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder2): UBlock(
      (ConvBnRelu1): ConvBnRelu(
        (conv): Conv3d(48, 48, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 48, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
      (ConvBnRelu2): ConvBnRelu(
        (conv): Conv3d(48, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 96, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder3): UBlock(
      (ConvBnRelu1): ConvBnRelu(
        (conv): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 96, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
      (ConvBnRelu2): ConvBnRelu(
        (conv): Conv3d(96, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 192, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
    )
    (encoder4): UBlock(
      (ConvBnRelu1): ConvBnRelu(
        (conv): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 192, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
      (ConvBnRelu2): ConvBnRelu(
        (conv): Conv3d(192, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 384, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
    )
    (bottom): UBlock(
      (ConvBnRelu1): ConvBnRelu(
        (conv): Conv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(2, 2, 2), dilation=(2, 2, 2), bias=False)
        (bn): GroupNorm(16, 384, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
      (ConvBnRelu2): ConvBnRelu(
        (conv): Conv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(2, 2, 2), dilation=(2, 2, 2), bias=False)
        (bn): GroupNorm(16, 384, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
    )
    (bottom_2): ConvBnRelu(
      (conv): Conv3d(768, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn): GroupNorm(16, 192, eps=1e-05, affine=True)
      (relu): ReLU(inplace=True)
      (dropout): Dropout(p=0.0, inplace=False)
    )
    (downsample): MaxPool3d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (decoder3): UBlock(
      (ConvBnRelu1): ConvBnRelu(
        (conv): Conv3d(384, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 192, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
      (ConvBnRelu2): ConvBnRelu(
        (conv): Conv3d(192, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 96, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
    )
    (decoder2): UBlock(
      (ConvBnRelu1): ConvBnRelu(
        (conv): Conv3d(192, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 96, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
      (ConvBnRelu2): ConvBnRelu(
        (conv): Conv3d(96, 48, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 48, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
    )
    (decoder1): UBlock(
      (ConvBnRelu1): ConvBnRelu(
        (conv): Conv3d(96, 48, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(16, 48, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
      (ConvBnRelu2): ConvBnRelu(
        (conv): Conv3d(48, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        (bn): GroupNorm(3, 24, eps=1e-05, affine=True)
        (relu): ReLU(inplace=True)
        (dropout): Dropout(p=0.0, inplace=False)
      )
    )
    (upsample): Upsample(scale_factor=2.0, mode='trilinear')
    (outconv): Conv3d(24, 3, kernel_size=(1, 1, 1), stride=(1, 1, 1))
    (deep_bottom): Sequential(
      (0): Conv3d(384, 3, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (1): Upsample(scale_factor=8.0, mode='trilinear')
    )
    (deep_bottom2): Sequential(
      (0): Conv3d(192, 3, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (1): Upsample(scale_factor=8.0, mode='trilinear')
    )
    (deep3): Sequential(
      (0): Conv3d(96, 3, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (1): Upsample(scale_factor=4.0, mode='trilinear')
    )
    (deep2): Sequential(
      (0): Conv3d(48, 3, kernel_size=(1, 1, 1), stride=(1, 1, 1))
      (1): Upsample(scale_factor=2.0, mode='trilinear')
    )
  )
)
